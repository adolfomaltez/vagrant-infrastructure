# -*- mode: ruby -*-
# vi: set ft=ruby :

BARE_METAL_NODES = 3;


Vagrant.configure("2") do |config|
  # Rancher
  config.vm.define :rancher do |rancher|
    rancher.vm.box = 'debian/bookworm64'
    rancher.vm.hostname = 'rancher'
    rancher.vm.network 'public_network',
      ip: "192.168.31.30",
      dev: 'br0',
      auto_config: false
      #libvirt__network_name: 'harvester',
      # don't enable DHCP as this node will have it's now DHCP server for iPXE
      # boot
      #libvirt__dhcp_enabled: false
    rancher.vm.provider :libvirt do |libvirt|
      libvirt.cpu_mode = 'host-passthrough'
      libvirt.memory = '4096'
      libvirt.cpus = '2'
    end
    ## Use ansible to install server
    #pxe_server.vm.provision :ansible do |ansible|
    #  ansible.playbook = 'ansible/setup_pxe_server.yml'
    #  ansible.extra_vars = {
    #    settings: @settings
    #  }
    #end
  end

  # Harvester HCI iPXE nodes
  (1..BARE_METAL_NODES).each do |i|
    config.vm.define "machine-#{i}" do |machine|
      machine.vm.hostname = "machine-#{i}"
      machine.vm.network :public_network,
        dev: 'br0',
        mac: "0800AA0800A#{i}",
        auto_config: false
      machine.vm.provider :libvirt do |libvirt|
        libvirt.cpu_mode = 'host-passthrough'
        libvirt.memory = '2048'
        libvirt.cpus = '2'
        boot_network = {'dev' => 'br0'}
        libvirt.storage :file, :size => '300G'
        libvirt.boot boot_network
        libvirt.boot 'hd'
        # VNC parameters
        libvirt.graphics_ip = '192.168.31.11'
        libvirt.video_type = 'qxl'
        # Set UEFI boot, comment for legacy
        libvirt.loader = '/usr/share/qemu/OVMF.fd'
        libvirt.nic_model_type = 'e1000'
      end        
    end
  end
end
